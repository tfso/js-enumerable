name: (Prerelease) Package

on:
    push:
        tags:
            - 'v[0-9]+\.[0-9]+\.[0-9]+-*' # only preleases, eg v1.0.1-beta.1

env:
  FILES: | 
    lib/
    src/
    package.json
    index.html
    LICENSE
    README.md

jobs:
  setup:
    runs-on: ubuntu-latest
    name: find version
    outputs:
      version: v${{ steps.semver.outputs.fullversion }}
      prerelease: ${{ steps.semver.outputs.prerelease }}
    steps:
      - name: extract tag version
        id: semver
        uses: booxmedialtd/ws-action-parse-semver@v1
        with:
          input_string: ${{ github.ref }}
          version_extractor_regex: 'refs\/tags\/v(.*)$'

  build:
    if: needs.setup.outputs.prerelease
    runs-on: ubuntu-latest
    needs: setup
    outputs:
      version: ${{ needs.setup.outputs.version }}
    steps:
      - name: build npm package
        uses: tfso/action-helpers/npm-build@v1
        id: npm
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TFSO_TOKEN }}
          FONT_AWESOME_TOKEN: ${{ secrets.FONT_AWESOME_TOKEN }}
          CUSTOM_TAG: ${{ needs.setup.outputs.version }}
          NODE_VERSION: 16

      - name: upload package
        uses: actions/upload-artifact@v3
        with:
          name: package
          path: ${{ env.FILES }}
          retention-days: 7

  publish-npm:
    runs-on: ubuntu-latest
    name: publish to npm
    needs: build
    if: ${{ secrets.NPM_TOKEN }}
    steps:
      - name: download package
        uses: actions/download-artifact@v3
        with:
          name: package

      - name: setup
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/
          scope: '@tfso'

      - name: extract npm tag
        id: npmpublish
        run: |
          echo "tag=$(echo "${PRERELEASE}" | sed 's/v\?[0-9]*\.[0-9]*\.[0-9]*\-\([^.+]*\).*/\1/')" >> $GITHUB_OUTPUT
        env:
          PRERELEASE: ${{ needs.build.outputs.version }}

      - name: publish prerelease version
        run: |
          npm publish --access public --tag ${{ steps.npmpublish.outputs.tag }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-github:
    runs-on: ubuntu-latest
    name: publish to github
    needs: build
    permissions:
      packages: write
    steps:
      - name: download package
        uses: actions/download-artifact@v3
        with:
          name: package

      - name: setup
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: 'https://npm.pkg.github.com'
          scope: '@tfso'

      - name: extract npm tag
        id: npmpublish
        run: |
          echo "tag=$(echo "${PRERELEASE}" | sed 's/v\?[0-9]*\.[0-9]*\.[0-9]*\-\([^.+]*\).*/\1/')" >> $GITHUB_OUTPUT
        env:
          PRERELEASE: ${{ needs.build.outputs.version }}

      - name: publish prerelease version
        run: |
          npm publish --access public --tag ${{ steps.npmpublish.outputs.tag }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
