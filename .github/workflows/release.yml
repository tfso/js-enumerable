on:
  release:
    types: [created]

name: release

jobs:
  build:
    name: create release
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: extract tag version
        id: semver 
        uses: booxmedialtd/ws-action-parse-semver@v1
        with:
          input_string: ${{ github.ref }}
          version_extractor_regex: 'refs\/tags\/v(.*)$'
      - name: extract package version
        id: semver_package
        uses: Saionaro/extract-package-version@v1.0.6
      - name: extract npm tag
        id: npmpublish
        run: |
          echo "${PRERELEASE}" | sed 's/[0-9]*\.[0-9]*\.[0-9]*\-\([^.+]*\).*/::set-output name=tag::\1/'
        env: 
          PRERELEASE: ${{steps.semver.outputs.fullversion}}           
      - name: extracted version
        run: |
          echo "## npm"
          echo "version: ${{ steps.semver_package.outputs.version }}"
          echo "tag: ${{ steps.npmpublish.outputs.tag }}"
          echo ""
          echo "## tag"
          echo "version: ${{ steps.semver.outputs.fullversion }}"
          echo "major: ${{ steps.semver.outputs.major }}"
          echo "minor: ${{ steps.semver.outputs.minor }}"
          echo "patch: ${{ steps.semver.outputs.patch }}"
          echo "prerelease: ${{ steps.semver.outputs.prerelease }}"
          echo "build: ${{ steps.semver.outputs.build }}"
      - name: build project
        run: |
          npm ci
          npm run build
          npm run lint
          npm test
        env:
          CI: true
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
          NPM_TFSO_TOKEN: ${{secrets.NPM_TFSO_TOKEN}}
      - name: upload artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: artifact
          path: | 
            lib/
            src/
            package.json
            index.html
            LICENSE
            README.md

  # publish-npm-prerelease:
  #   name: publish npm prerelease
  #   if: "github.event.release.prerelease"
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: download artifact
  #       uses: actions/download-artifact@v2.0.10
  #       with:
  #         name: artifact
  #     - name: setup
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 12
  #         registry-url: https://registry.npmjs.org/
  #         scope: "@tfso"
  #     - name: parse semver string
  #       id: semver 
  #       uses: booxmedialtd/ws-action-parse-semver@v1
  #       with:
  #         input_string: ${{ github.ref }}
  #         version_extractor_regex: 'refs\/tags\/v(.*)$'
  #     - name: extract npm tag
  #       id: npmpublish
  #       run: |
  #         echo "${PRERELEASE}" | sed 's/[0-9]*\.[0-9]*\.[0-9]*\-\([^.+]*\).*/::set-output name=tag::\1/'
  #       env: 
  #         PRERELEASE: ${{steps.semver.outputs.fullversion}}
  #     - name: check prerelease
  #       if: "!steps.semver.outputs.prerelease"
  #       run: |
  #         echo "prerelease is not correct according to semantic versioning for prerelease tag; ie: v1.0.1-beta.1"
  #         echo "version is currently ${{ steps.semver.outputs.fullversion }}"
  #         exit 1
  #     - name: set version for package
  #       run: |
  #         npm version ${{ steps.semver.outputs.fullversion }} --no-git-tag-version --ignore-scripts
  #     - name: publish prerelease version
  #       run: |
  #         npm publish --access public --tag ${{ steps.npmpublish.outputs.tag }}
  #       env:
  #         NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

  publish-github-prerelease:
    name: publish npm prerelease to github
    if: "github.event.release.prerelease"
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: download artifact
        uses: actions/download-artifact@v2.0.10
        with:
          name: artifact
      - name: setup
        uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://npm.pkg.github.com/          
      # - name: validate and extract release information
      #   id: release
      #   run: |
      #     echo ::set-output name=tag::${GITHUB_REF#refs/tags/}
      - name: parse semver string
        id: semver 
        uses: booxmedialtd/ws-action-parse-semver@v1
        with:
          input_string: ${{ github.ref }}
          version_extractor_regex: 'refs\/tags\/v(.*)$'
      - name: extract npm tag
        id: npmpublish
        run: |
          echo "${PRERELEASE}" | sed 's/[0-9]*\.[0-9]*\.[0-9]*\-\([^.+]*\).*/::set-output name=tag::\1/'
        env: 
          PRERELEASE: ${{steps.semver.outputs.fullversion}}
      - name: check prerelease
        if: "!steps.semver.outputs.prerelease"
        run: |
          echo "prerelease is not correct according to semantic versioning for prerelease tag; ie: v1.0.1-beta.1"
          echo "version is currently ${{ steps.semver.outputs.fullversion }}"
          exit 1
      - name: set version for package
        run: |
          npm version ${{ steps.semver.outputs.fullversion }} --no-git-tag-version --ignore-scripts
      - name: publish prerelease version
        run: |
          npm publish --tag ${{ steps.npmpublish.outputs.tag }}
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

  publish-npm:
    name: publish npm
    if: "!github.event.release.prerelease"
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: download artifact
        uses: actions/download-artifact@v2.0.10
      - name: setup
        uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
          scope: "@tfso"
      - name: extract package version
        id: semver_package
        uses: Saionaro/extract-package-version@v1.0.6
      - name: extract tag version
        id: semver 
        uses: booxmedialtd/ws-action-parse-semver@v1
        with:
          input_string: ${{ github.ref }}
          version_extractor_regex: 'refs\/tags\/v(.*)$'
      - name: compare package version with tag version
        if: steps.semver_package.outputs.version != steps.semver.outputs.fullversion
        run: |
          echo "version from package ${{ steps.semver_package.outputs.version }} is not matching tag version ${{ steps.semver.outputs.fullversion }}"
          exit 1
      - name: publish
        run: |
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}

  publish-github:
    name: publish npm to github
    if: "!github.event.release.prerelease" # https://developer.github.com/v3/activity/events/types/#releaseevent
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write  
    steps:
      - name: download artifact
        uses: actions/download-artifact@v2.0.10
        with:
          name: artifact
      - name: setup
        uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://npm.pkg.github.com/
      - name: extract package version
        id: semver_package
        uses: Saionaro/extract-package-version@v1.0.6
      - name: extract tag version
        id: semver 
        uses: booxmedialtd/ws-action-parse-semver@v1
        with:
          input_string: ${{ github.ref }}
          version_extractor_regex: 'refs\/tags\/v(.*)$'
      - name: compare package version with tag version
        if: steps.semver_package.outputs.version != steps.semver.outputs.fullversion
        run: |
          echo "version from package ${{ steps.semver_package.outputs.version }} is not matching tag version ${{ steps.semver.outputs.fullversion }}"
          exit 1          
      - name: publish version
        if: steps.semver_package.outputs.version == steps.semver.outputs.fullversion
        run: |
          npm publish
        env:
          CI: true
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
